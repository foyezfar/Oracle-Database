In some situations analyzing the tables and indexes in an Oracle database will improve query performance. 
Analyzing tables and indexes will generate current statistics for the RequisitePro objects involved in SQL statements.
Statistics are used by the Oracle Optimizer to determine the most efficient way to execute a query. 
The statistics generated by the analyze command are only used if the database parameter optimizer_mode is set to a value of Choose, 
First_Rows or All_Rows.

The most important pieces of information the optimizer gets from this process are the number of rows and the number of blocks. 
When joining two or more tables, the optimizer will attempt to use the table with the fewest number of rows or blocks as the driving table.
This should reduce the total amount of disk I/O necessary, and thus improve performance.

Note: If the database optimizer_mode parameter is set to "Rule" the following steps will have no impact on database performance.

SQL> select value from v$parameter where name='optimizer_mode';

OPTIMIZER_MODE
===============================================
first_rows_n:
The optimizer uses a cost-based approach and optimizes with a goal of best response time to return the first n rows 
(where n = 1, 10, 100, 1000).

first_rows:
The optimizer uses a mix of costs and heuristics to find a best plan for fast delivery of the first few rows.

all_rows:
The optimizer uses a cost-based approach for all SQL statements in the session and optimizes with a goal of best throughput 
(minimum resource use to complete the entire statement).


Script to analyze tables:
===============================================
1.Connect to SQL PLUS as the database user.
	SQL> conn hr/hr

2.Issue the following command to set the appropriate page size
	Set pagesize 100
	
3.Turn spooling on which will send write output from SQL PLUS to a file.
	Spool <local path on the machine>\Table_analyze.sql

4.Issue the following command and press enter.
	select 'Analyze Table '||table_name||' compute statistics;' from user_tables;

5.Turn spooling off.
	Spool off

6. Browse to the location of the Table_analyze.sql and remove 
'ANALYZETABLE'||TABLE_NAME||'COMPUTESTATISTICS;'
----------------------------------------------------------------
from the .sql file

7.Return to SQL Plus and run the script as follows:
	@ <local_path>\Table_analyze.sql


Script to analyze indexes:
===============================================
select 'Analyze Index '||index_name||' compute statistics;' from user_indexes








