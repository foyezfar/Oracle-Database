nmtui
192.168.0.101
systemctl restart network
ifconfig

hostnamectl status
hostnamectl set-hostname primary
#Re-login and verify the new hostname 
hostnamectl

#The "/etc/hosts" file must contain a fully qualified name for the server.
vim /etc/hosts
192.168.0.101   primary         primary
192.168.0.102   secondary       secondary

ping secondary

yum list oracle*
yum install -y oracle-database-server-12cR2-preinstall.x86_64

#Set password for the oracle user
passwd oracle

#Set secure Linux to permissive by editing the "/etc/selinux/config" file, making sure the SELINUX flag is set as follows.
vim /etc/selinux/config
SELINUX=permissive

#Once the change is complete, restart the server or run the following command.
setenforce Permissive

#If you have the Linux firewall enabled, you will need to disable or configure it, as shown here. To disable it, do the following.
systemctl stop firewalld
systemctl disable firewalld


#Create the directories in which the Oracle software will be installed.

mkdir -p /u01/app/oracle/product/12.2.0.1/dbhome_1
mkdir -p /u02/oradata
chown -R oracle:oinstall /u01 /u02
chmod -R 775 /u01 /u02


#Setup Oracle user bash_profile

mkdir /home/oracle/scripts

cat > /home/oracle/scripts/setEnv.sh <<EOF
# Oracle Settings
export TMP=/tmp
export TMPDIR=\$TMP

export ORACLE_HOSTNAME=primary
#export ORACLE_UNQNAME=prm
export ORACLE_BASE=/u01/app/oracle
export ORACLE_HOME=\$ORACLE_BASE/product/12.2.0.1/dbhome_1
export ORA_INVENTORY=/u01/app/oraInventory
export ORACLE_SID=prm
#export PDB_NAME=pdb1
export DATA_DIR=/u02/oradata

export PATH=/usr/sbin:/usr/local/bin:\$PATH
export PATH=\$ORACLE_HOME/bin:\$PATH

export LD_LIBRARY_PATH=\$ORACLE_HOME/lib:/lib:/usr/lib
export CLASSPATH=\$ORACLE_HOME/jlib:\$ORACLE_HOME/rdbms/jlib
EOF

#Add a reference to the "setEnv.sh" file at the end of the "/home/oracle/.bash_profile" file.

echo ". /home/oracle/scripts/setEnv.sh" >> /home/oracle/.bash_profile

#Export the bash profile

. .bash_profile


env | grep ORA

Install Oracle 12c Software

cd $ORACLE_HOME

unzip -qo  OracleDatabase12.2.0.1.0.zip

cd $ORACLE_HOME/database

./runInstaller -ignoreSysPrereqs -showProgress -silent       \
oracle.install.option=INSTALL_DB_SWONLY                      \
ORACLE_HOSTNAME=primary                                      \
UNIX_GROUP_NAME=oinstall                                     \
INVENTORY_LOCATION=${ORA_INVENTORY}                          \
SELECTED_LANGUAGES=en,en_GB                                  \
ORACLE_HOME=${ORACLE_HOME}                                   \
ORACLE_BASE=${ORACLE_BASE}                                   \
oracle.install.db.InstallEdition=EE                          \
oracle.install.db.OSDBA_GROUP=dba                            \
oracle.install.db.OSOPER_GROUP=dba                           \
oracle.install.db.OSBACKUPDBA_GROUP=dba                      \
oracle.install.db.OSDGDBA_GROUP=dba                          \
oracle.install.db.OSKMDBA_GROUP=dba                          \
oracle.install.db.OSRACDBA_GROUP=dba                         \
SECURITY_UPDATES_VIA_MYORACLESUPPORT=false                   \
DECLINE_SECURITY_UPDATES=true                                \
oracle.installer.autoupdates.option=SKIP_UPDATES


DBCA Create 12c Database

#for silent database creation
dbca -silent -createDatabase                   \
-templateName General_Purpose.dbc              \
-gdbName ${ORACLE_SID}                         \
-sid ${ORACLE_SID}                             \
-createAsContainerDatabase false               \
-emConfiguration NONE                          \
-datafileDestination /u01/db_files             \
-storageType FS                                \
-characterSet AL32UTF8                         \
-totalMemory 1500                              \
-recoveryAreaDestination /u01/FRA              \
-sampleSchema true



========================================================
Oracle Data Guard Physical Standby Configuration
========================================================
Primary database changes

Primary must run in archive log mode. Check the archive log mode
SQL> SELECT log_mode FROM v$database;

SQL> shutdown immediate
SQL> startup mount
SQL> alter database archivelog;
SQL> alter database open;
SQL> archive log list;

Enable force logging on primary

SQL> alter database force logging;
SQL> select name, force_logging from v$database;

Standby file management:
SQL> alter system set standby_file_management = 'AUTO';

========================================================
Create standby log files:
========================================================
select GROUP#, THREAD#, bytes/1024/1024, MEMBERS, STATUS from v$log;
SQL> select GROUP#,member from v$logfile;
MEMBER
--------------------------------------------------------------------------------
/u01/db_files/prm/redo03.log
/u01/db_files/prm/redo02.log
/u01/db_files/prm/redo01.log


ALTER DATABASE ADD STANDBY LOGFILE THREAD 1 GROUP 11 '/u01/db_files/prm/stb_redo11.log' SIZE 50M;
ALTER DATABASE ADD STANDBY LOGFILE THREAD 1 GROUP 12 '/u01/db_files/prm/stb_redo12.log' SIZE 50M;
ALTER DATABASE ADD STANDBY LOGFILE THREAD 1 GROUP 13 '/u01/db_files/prm/stb_redo13.log' SIZE 50M;
ALTER DATABASE ADD STANDBY LOGFILE THREAD 1 GROUP 14 '/u01/db_files/prm/stb_redo14.log' SIZE 50M;

SELECT GROUP#,THREAD#,SEQUENCE#,ARCHIVED,STATUS FROM V$STANDBY_LOG;

========================================================
Create password file for standby:
========================================================
SQL> show parameter remote_login_passwordfile;

NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
remote_login_passwordfile            string      EXCLUSIVE

If not EXCLUSIVE then
alter system set remote_login_passwordfile =exclusive scope=spfile;
exit

cd $ORACLE_HOME/dbs/
[oracle@primary ~]$orapwd file=$ORACLE_HOME/dbs/orapwsec entries=10 force=y   [orapw+sidofsecondary]
OR
[oracle@primary dbs]$ orapwd file=$ORACLE_HOME/dbs/orapwsec password=welcome123# 

[oracle@primary dbs]$ scp orapwsec oracle@secondary:$ORACLE_HOME/dbs

SQL> show parameter db_unique_name;

NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
db_unique_name                       string      prm




Enable flashback on primary:
SQL> alter system set db_recovery_file_dest_size=45g;
SQL> alter database flashback on;
SQL> select flashback_on from v$database;


If flashback parameters are not set properly, use below commands

SQL> show parameter recovery;
SQL> alter system set db_recovery_file_dest='/u01/app/oracle/fast_recovery_area';
SQL> alter system set db_recovery_file_dest_size=45g;
SQL> alter database flashback on;


Configure network

vim $ORACLE_HOME/network/admin/tnsnames.ora
prm =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.0.101)(PORT = 1521))
    )
    (CONNECT_DATA =
      (SID = prm)
    )
  )

sec =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.0.102)(PORT = 1521))
    )
    (CONNECT_DATA =
      (SID = sec)
    )
  )
  
  

Configure listener on primary database.
vi $ORACLE_HOME/network/admin/listener.ora

LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.0.101)(PORT = 1521))
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))
    )
  )

SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (GLOBAL_DBNAME = prm)
      (ORACLE_HOME = /u01/app/oracle/product/12.2.0.1/dbhome_1)
      (SID_NAME = prm)
    )
    (SID_DESC =
      (GLOBAL_DBNAME = prm_DGMGRL)
      (ORACLE_HOME = /u01/app/oracle/product/12.2.0.1/dbhome_1)
      (SID_NAME = prm)
    )
  )

ADR_BASE_LISTENER = /u01/app/oracle


lsnrctl stop
lsnrctl start

[oracle@secondary ~]$ tnsping prm
[oracle@secondary ~]$ tnsping sec


Configure redo transport

Configure redo transport from primary to standby:
On Primary Server
=================
SQL> alter system set log_archive_dest_2 = 'service=sec async valid_for=(online_logfiles,primary_role) db_unique_name=sec';

service -> define on tns file

Setup FAL (Fetch Archive Log) server:
On Primary Server
=================
SQL> alter system set fal_server = 'sec';

Setup Data Guard configuration on primary: This parameter will let primary database know which databases are in data guard configuration

On Primary Server
=================
SQL> alter system set log_archive_config = 'dg_config=(prm,sec)';



Build standby

Create pfile on primary, open it and create the necessary directories on the standby server

On Primary Server
=================
SQL> create pfile='/tmp/initsec.ora' from spfile;
exit

[oracle@primary ~]$ scp /tmp/initsec.ora oracle@secondary:/tmp


go to standby server --->>>>>>>>>>>>>>>>> 





<<<<<<<<<<--------------------------

[oracle@primary ~]$ rman target sys@prm
welcome123#

RMAN> connect auxiliary sys/welcome123#@sec    
password -> primary server sys password


RMAN> DUPLICATE TARGET DATABASE FOR STANDBY FROM ACTIVE DATABASE NOFILENAMECHECK;



------------>>>>>>>>>>>>>>>>>>>>>>>
















Client Connectivity in Data Guard Configuration
Create a database service on primary: This service is created on primary database to connect proddb

exec DBMS_SERVICE.CREATE_SERVICE (service_name => 'prm_rw', network_name => 'prm_rw', failover_method => 'BASIC', failover_type => 'SELECT', failover_retries => 30, failover_delay => 10);


Make above service run only on primary:


create or replace procedure prm_rw_service
is
v_role VARCHAR(30);
begin
select DATABASE_ROLE into v_role from V$DATABASE;
if v_role = 'PRIMARY' then
DBMS_SERVICE.START_SERVICE('prm');
else
DBMS_SERVICE.STOP_SERVICE('prm');
end if;
end;
/



Create trigger to start above service: We need to create trigger to start above service on database startup and also role change on primary

TRIGGER TO START SERVICE ON DB STARTUP:
=======================================
create or replace TRIGGER db_startup
after startup on database
begin
prm_rw_service;
end;
/

TRIGGER TO START SERVICE ON DB ROLECHANGE:
==========================================
create or replace TRIGGER db_role_change
after db_role_change on database
begin
prm_rw_service;
end;
/

alter system switch logfile;
exec prm_rw_service;
alter system switch logfile;













