nmtui
192.168.0.102
systemctl restart network
ifconfig

hostnamectl status
hostnamectl set-hostname secondary
#Re-login and verify the new hostname 
hostnamectl


#The "/etc/hosts" file must contain a fully qualified name for the server.
vim /etc/hosts
192.168.0.101   primary         primary
192.168.0.102   secondary       secondary


ping primary


yum list oracle*
yum install -y oracle-database-server-12cR2-preinstall.x86_64

#Set password for the oracle user
passwd oracle

#Set secure Linux to permissive by editing the "/etc/selinux/config" file, making sure the SELINUX flag is set as follows.
vim /etc/selinux/config
SELINUX=permissive

#Once the change is complete, restart the server or run the following command.
setenforce Permissive

#If you have the Linux firewall enabled, you will need to disable or configure it, as shown here. To disable it, do the following.
systemctl stop firewalld
systemctl disable firewalld


#Create the directories in which the Oracle software will be installed.

mkdir -p /u01/app/oracle/product/12.2.0.1/dbhome_1
mkdir -p /u02/oradata
chown -R oracle:oinstall /u01 /u02
chmod -R 775 /u01 /u02


#Setup Oracle user bash_profile

mkdir /home/oracle/scripts

cat > /home/oracle/scripts/setEnv.sh <<EOF

# Oracle Settings
export TMP=/tmp
export TMPDIR=\$TMP

export ORACLE_HOSTNAME=secondary
#export ORACLE_UNQNAME=sec
export ORACLE_BASE=/u01/app/oracle
export ORACLE_HOME=\$ORACLE_BASE/product/12.2.0.1/dbhome_1
export ORA_INVENTORY=/u01/app/oraInventory
export ORACLE_SID=sec
#export PDB_NAME=pdb1
export DATA_DIR=/u02/oradata

export PATH=/usr/sbin:/usr/local/bin:\$PATH
export PATH=\$ORACLE_HOME/bin:\$PATH

export LD_LIBRARY_PATH=\$ORACLE_HOME/lib:/lib:/usr/lib
export CLASSPATH=\$ORACLE_HOME/jlib:\$ORACLE_HOME/rdbms/jlib
EOF

#Add a reference to the "setEnv.sh" file at the end of the "/home/oracle/.bash_profile" file.

echo ". /home/oracle/scripts/setEnv.sh" >> /home/oracle/.bash_profile

#Export the bash profile

. .bash_profile


Install Oracle 12c Software:
cd $ORACLE_HOME

unzip -qo  OracleDatabase12.2.0.1.0.zip

cd $ORACLE_HOME/database



./runInstaller -ignoreSysPrereqs -showProgress -silent       \
oracle.install.option=INSTALL_DB_SWONLY                      \
ORACLE_HOSTNAME=secondary                                    \
UNIX_GROUP_NAME=oinstall                                     \
INVENTORY_LOCATION=${ORA_INVENTORY}                          \
SELECTED_LANGUAGES=en,en_GB                                  \
ORACLE_HOME=${ORACLE_HOME}                                   \
ORACLE_BASE=${ORACLE_BASE}                                   \
oracle.install.db.InstallEdition=EE                          \
oracle.install.db.OSDBA_GROUP=dba                            \
oracle.install.db.OSOPER_GROUP=dba                           \
oracle.install.db.OSBACKUPDBA_GROUP=dba                      \
oracle.install.db.OSDGDBA_GROUP=dba                          \
oracle.install.db.OSKMDBA_GROUP=dba                          \
oracle.install.db.OSRACDBA_GROUP=dba                         \
SECURITY_UPDATES_VIA_MYORACLESUPPORT=false                   \
DECLINE_SECURITY_UPDATES=true                                \
oracle.installer.autoupdates.option=SKIP_UPDATES





vim $ORACLE_HOME/network/admin/tnsnames.ora

prm =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.0.101)(PORT = 1521))
    )
    (CONNECT_DATA =
      (SID = prm)
    )
  )

sec =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.0.102)(PORT = 1521))
    )
    (CONNECT_DATA =
      (SID = sec)
    )
  )
  
  
Configure listener on standby.
LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.0.102)(PORT = 1521))
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))
    )
  )

SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (GLOBAL_DBNAME = sec_DGMGRL)
      (ORACLE_HOME = /u01/app/oracle/product/12.2.0.1/dbhome_1)
      (SID_NAME = sec)
    )
  )

ADR_BASE_LISTENER = /u01/app/oracle



lsnrctl stop
lsnrctl start


[oracle@secondary ~]$ tnsping prm
[oracle@secondary ~]$ tnsping sec










-------------------->>>>>>>>>>
==========================================================

[oracle@secondary dbs]$ cd /tmp
[oracle@secondary tmp]$ vim initsec.ora
Set Standby Parameters:
*.fal_server='prm'
*.log_archive_dest_2='service=prm async valid_for=(online_logfiles,primary_role) db_unique_name=prm'

add parameter

*.db_unique_name='sec'

On Standby Server
=================
on standby, create directories as you find in the initsec.ora file
[oracle@secondary tmp]$ cat initsec.ora
mkdir -p /u01/app/oracle/admin/prm/adump
mkdir -p /u01/db_files/prm/
mkdir -p /u01/FRA/prm/

[oracle@secondary tmp]$ env | grep ORA

sqlplus / as sysdba

SQL> create spfile from pfile='/tmp/initsec.ora';

[oracle@secondary tmp]$ cd $ORACLE_HOME/dbs
[oracle@secondary dbs]$ ll
-rw-r-----. 1 oracle oinstall 3584 Jun 10 15:52 spfilesec.ora

sqlplus / as sysdba

SQL> startup nomount;
SQL> show parameter spfile;
exit
you must exit from sqlplus, else cloning will fail



go to primary <-------------










<<<<<<<<<-----------------------
SQL> select name,open_mode from v$database;

Verify standby configuration

Once MRP is started, we must verify if our setup is working fine

On standby:
===========
--start MRP command
SQL> alter database recover managed standby database disconnect;








On both primary & standby:
==========================
set lines 999;
select * from v$dataguard_status order by timestamp;

select dest_id, status, destination, error from v$archive_dest where dest_id<=2;

IF you see any ORA error like ORA-16058, do this on primary:
============================================================
SQL> alter system set log_archive_dest_state_2='DEFER';
SQL> alter system set log_archive_dest_state_2='ENABLE';
SQL> select dest_id, status, destination, error from v$archive_dest where dest_id<=2;

On primary:
===========
select sequence#, first_time, next_time, applied, archived from v$archived_log where name = 'sec' order by first_time;

select STATUS, GAP_STATUS from V$ARCHIVE_DEST_STATUS where DEST_ID = 2;

archive log list;

On standby:
===========
select process, status, sequence# from v$managed_standby;
select sequence#, applied, first_time, next_time, name filename from v$archived_log order by sequence#;



Enable flashback on standby: As we know the importance of flashback in data guard, we must enable it on standby as well

On Standby Server
=================

alter database recover managed standby database cancel;
SQL> alter database flashback on;
SQL> alter database recover managed standby database disconnect;


Configure Archive deletion policy: We must set this policy in order to prevent accidental deletion of archive logs on primary database

On Primary:
===========
rman target / 
configure archivelog deletion policy to applied on all standby;